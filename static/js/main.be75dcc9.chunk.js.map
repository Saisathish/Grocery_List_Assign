{"version":3,"sources":["store/ListReducer.js","Components/SortFilter.js","Components/List.js","Components/InputGrocery.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","store","createStore","currentState","action","type","name","count","isCompleted","isVisible","map","el","search","toLowerCase","includes","tempState","concat","sort","i","j","console","log","SortSearch","props","dispatch","useDispatch","useState","value","setValue","searchGrocery","searchterm","className","onClick","placeholder","onChange","e","target","DisplayList","groceryList","useSelector","state","length","style","color","grocery","InputGrocery","onSubmit","preventDefault","event","groceryName","some","item","App","List","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be75dcc9.chunk.js","sourcesContent":["import {createStore} from 'redux';\r\n\r\nconst initialState = [];\r\n\r\nfunction listReducer(currentState = initialState, action){\r\n    switch(action.type){\r\n        case \"ADD_GROCERY\": {\r\n            return [...currentState,{name: action.name, count:1, isCompleted:false, isVisible:true}];\r\n        };\r\n        case \"TOGGLE\":{\r\n            return currentState.map((el)=>{\r\n                if(el.name === action.name){\r\n                    return {...el, isCompleted:!el.isCompleted};\r\n                }\r\n                return el;\r\n            })\r\n        };\r\n        case \"INCREMENT\":{\r\n            return currentState.map((el)=>{\r\n                if(el.name === action.name){\r\n                    return {...el, count: el.count + 1};\r\n                }\r\n                return el;\r\n            })\r\n        };\r\n        case \"DECREMENT\":{\r\n            return currentState.map((el)=>{\r\n                if(el.name === action.name){\r\n                    if(el.count > 1){\r\n                        return {...el, count: el.count - 1};\r\n                    }\r\n                    \r\n                }\r\n                return el;\r\n            })\r\n        };\r\n        case \"SEARCH\":{\r\n            if(action.search === \"\"){\r\n                return currentState.map((el)=>{\r\n                    return {...el,isVisible:true};\r\n                });\r\n            }else{\r\n                return currentState.map((el)=>{\r\n                    if(!el.name.toLowerCase().includes(action.search.toLowerCase())){\r\n                        return {...el, isVisible: false};\r\n                    }\r\n                    return el;\r\n                })\r\n            }\r\n            \r\n            // const filteredList = currentState.filter((grocery)=>{\r\n            //     if(action.search === \"\") return grocery;\r\n            //     return grocery.name.toLowerCase().includes(action.search.toLowerCase());\r\n            // });\r\n            // return filteredList;\r\n        };\r\n        case \"SORT_BY_NAME\":{\r\n            const tempState = [].concat(currentState).sort((i,j)=>{\r\n                if(i[\"name\"]<j[\"name\"]) return -1;\r\n                if(i[\"name\"]>j[\"name\"]) return 1;\r\n                return 0;\r\n                });\r\n            console.log(tempState);\r\n            return tempState;\r\n        };\r\n        case \"SORT_BY_QUANT\":{\r\n            const tempState = [].concat(currentState).sort((i,j)=>{\r\n                if(i[\"count\"]<j[\"count\"]) return -1;\r\n                if(i[\"count\"]>j[\"count\"]) return 1;\r\n                return 0;\r\n                });\r\n            console.log(tempState);\r\n            return tempState;\r\n        };\r\n        case \"MARK_ALL_DONE\": {\r\n            return currentState.map((el)=>{\r\n                return {...el,isCompleted:true};\r\n            });\r\n        };\r\n        case \"MARK_ALL_UNDONE\": {\r\n            return currentState.map((el)=>{\r\n                return {...el,isCompleted:false};\r\n            });\r\n        };\r\n        case \"CLEAR_ALL\": {\r\n            return initialState ;\r\n        }\r\n        default : return currentState;\r\n    }\r\n}\r\n\r\nconst store = createStore(listReducer);\r\nexport { store };","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nfunction useDebounce(value, delay) {\r\n    const [debouncedValue, setDebouncedValue] = useState(value);\r\n  \r\n    useEffect(\r\n      () => {\r\n        const handler = setTimeout(() => {\r\n          setDebouncedValue(value);\r\n        }, delay);\r\n        return () => {\r\n          clearTimeout(handler);\r\n        };\r\n      },\r\n      [value] \r\n    );\r\n  \r\n    return debouncedValue;\r\n};\r\n\r\nfunction SortSearch (props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    function debounce(val, waitTime){\r\n        let timeoutID;\r\n        return function(...args){\r\n            clearTimeout(timeoutID);\r\n            const context=this;\r\n            timeoutID = setTimeout(()=>{\r\n                // fn.call(context,...args);\r\n                // console.log(value);\r\n                setValue(value);\r\n                searchGrocery(value);\r\n            },waitTime);\r\n        };\r\n    };\r\n\r\n    const sortByName = ()=>{\r\n        return dispatch({\r\n            type: \"SORT_BY_NAME\"\r\n        });\r\n    };\r\n    const sortByQuantity = ()=>{\r\n        return dispatch({\r\n            type: \"SORT_BY_QUANT\"\r\n        });\r\n    };\r\n    const searchGrocery = (searchterm)=>{\r\n        return dispatch({\r\n            type: \"SEARCH\",\r\n            search: searchterm\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='filtersort-container'>\r\n                <button className='additional-btn' onClick={()=>{\r\n                    sortByName();\r\n                }}>Sort by Name</button>\r\n                <button className='additional-btn' onClick={()=>{\r\n                    sortByQuantity();\r\n                }}>Sort by Quantity</button>\r\n                    <input className='search-bar' value={value} placeholder=\"Search grocery\" onChange={(e)=>{\r\n                        const {target:{value}} = e;\r\n                        // useDebounce(value,1000);\r\n                        // console.log(value);\r\n                        setValue(value);\r\n                        searchGrocery(value);\r\n                    }} />\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SortSearch;","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\nimport SortEl from './SortFilter';\r\n\r\nfunction DisplayList (){\r\n  const groceryList = useSelector((state)=>state);\r\n  const dispatch = useDispatch();\r\n  const toggleComplete = (grocery)=>{\r\n    return dispatch({\r\n        type:\"TOGGLE\",\r\n        name: grocery\r\n    });\r\n  };\r\n  const increaseCount = (grocery)=>{\r\n    return dispatch({\r\n        type:\"INCREMENT\",\r\n        name: grocery\r\n    });\r\n  };\r\n  const decreaseCount = (grocery)=>{\r\n    return dispatch({\r\n        type:\"DECREMENT\",\r\n        name: grocery\r\n    });\r\n  };\r\n  const clearAll = ()=>{\r\n    return dispatch({\r\n      type:\"CLEAR_ALL\"\r\n    });\r\n  };\r\n\r\nreturn (\r\n    <>\r\n    <h2>All grocery items</h2>\r\n    {groceryList.length != 0 ? (\r\n      <>\r\n      <SortEl />\r\n      <ul className='grocery-list'>\r\n      {groceryList.map(el => {\r\n          const {isCompleted, name, count, isVisible} = el;\r\n          if(isVisible){\r\n            return <>\r\n            <li className='grocery-item' key={name}>\r\n              <div className='title' style={{color: isCompleted?\"red\":\"black\"}} onClick={()=>{\r\n                toggleComplete(el.name);\r\n              }}>{el.name}</div>\r\n              <div className='btn-container'>\r\n                <button onClick={()=>{\r\n                  increaseCount(el.name);\r\n                }}> + </button>\r\n                <div className='count-display'> {count} </div>\r\n                <button onClick={()=>{\r\n                  decreaseCount(el.name);\r\n                }}> - </button>\r\n              </div>\r\n            </li>\r\n            </>\r\n          }\r\n          return null;\r\n          \r\n      })}\r\n      </ul>\r\n      <button className='clear-btn' onClick={()=>{\r\n        clearAll();\r\n      }}>Clear All Items</button>\r\n      </>\r\n    ): <h4>You do not have any right now. Add some items to see !!</h4>}\r\n    \r\n    </>\r\n);\r\n}\r\n\r\nexport default DisplayList;","import React, { useState } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction InputGrocery(props){\r\n\r\n    const groceryList = useSelector((state)=>state);\r\n    const dispatch = useDispatch();\r\n\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log(e);\r\n    };\r\n\r\n    function addGrocery(groceryName){\r\n        if(groceryList){\r\n            var ifExists = groceryList.some((item)=>{\r\n                return item.name === groceryName;\r\n            })\r\n            if(ifExists){\r\n                return {\r\n                    type: \"INCREMENT\",\r\n                    name: groceryName\r\n                };\r\n            }else{\r\n                return {\r\n                    type: \"ADD_GROCERY\",\r\n                    name: groceryName\r\n                };\r\n            }\r\n        }\r\n        return {\r\n            type: \"ADD_GROCERY\",\r\n            name: groceryName\r\n        };\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <form className='grocery-form' onSubmit={handleSubmit}>\r\n                <input type=\"text\" className='grocery' value={value} onChange={(event)=>{\r\n                    const {target:{value}} = event;\r\n                    setValue(value);\r\n                }} />\r\n                <button className='submit-btn' onClick={()=>{\r\n                    dispatch(addGrocery(value));\r\n                    setValue(\"\");\r\n                }}>Add</button>\r\n        </form>\r\n        </>\r\n        );\r\n}\r\n\r\nexport default InputGrocery;","import React from 'react';\n\nimport './App.css';\n\nimport{ Provider } from 'react-redux';\nimport { store } from './store/ListReducer';\n\nimport List from './Components/List';\nimport Input from './Components/InputGrocery';\n\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      \n      <div className=\"App\">\n      <h1>Personal Grocery List</h1>\n      <div className='section-center'>\n        <Input />\n        <List />\n        </div>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}